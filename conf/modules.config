/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info/variantcalling" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:INPUT_FILTER_SPLIT:SAMTOOLS_VIEW' {
        ext.args   = '--output-fmt cram --write-index -F 0x900'
        ext.prefix = { "${meta.id}_filtered" }
    }

    withName: '.*:INPUT_MERGE:SAMTOOLS_MERGE' {
        ext.args   = '--write-index'
    }

    withName: '.*:DEEPVARIANT_CALLER:DEEPVARIANT' {
        ext.args = '--model_type=PACBIO'
    }

    withName: '.*:DEEPVARIANT_CALLER:BCFTOOLS_CONCAT_VCF' {
        ext.prefix = { "${meta.id}_deepvariant" }
        publishDir = [
            path: { "${params.outdir}/variant_calling" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:DEEPVARIANT_CALLER:BCFTOOLS_CONCAT_GVCF' {
        ext.prefix = { "${meta.id}_deepvariant.g" }
        publishDir = [
            path: { "${params.outdir}/variant_calling" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:PROCESS_VCF:VCFTOOLS_SITE_PI' {
        ext.args = '--site-pi'
        if( params.include_positions ){
            ext.args += ' --positions'
        } else if ( params.exclude_positions ){
            ext.args += ' --exclude-positions'
        }
        publishDir = [
            path: { "${params.outdir}/variant_calling" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:PROCESS_VCF:VCFTOOLS_HET' {
        ext.args = '--het'
        publishDir = [
            path: { "${params.outdir}/variant_calling" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info/variantcalling" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

}
